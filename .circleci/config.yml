version: 2.1
orbs:
  slack: circleci/slack@4.1
executors:
  bxgo:
    docker:
      - image: cimg/go:1.18
    environment:
      GOPATH: /home/circleci/go
      WORKSPACE: /home/circleci/go/src/github.com/bloXroute-Labs/solana-trader-client-go
      GOTRACEBACK: all
      RUN_TRADES: false
      RUN_SLOW_STREAM: false
      BUILD_ENV: src/.build-env
    working_directory: /home/circleci/go/src/github.com/bloXroute-Labs/solana-trader-client-go
jobs:
  checkout:
    executor: bxgo
    steps:
      - attach_workspace:
          at: /home/circleci/go
      - checkout
      - run:
          name: Export build details
          command: |
            touch $BUILD_ENV
            echo 'export COMMIT_HASH=$(git rev-parse HEAD)' >> $BUILD_ENV
            echo 'export COMMIT_AUTHOR="$(git --no-pager log -1 --pretty=format:'%an')"' >> $BUILD_ENV
            echo 'export BRANCH="$(git rev-parse --abbrev-ref HEAD)"' >> $BUILD_ENV
      - persist_to_workspace:
          root: /home/circleci/go/
          paths:
            - src
            - pkg
            - bin
  init:
    executor: bxgo
    steps:
      - attach_workspace:
          at: /home/circleci/go
      - restore_cache:
          keys:
            - v1-go-mod-{{checksum "go.sum"}}
      - run:
          name: Update/install packages
          command: |
            sudo apt update
            sudo apt install awscli
      - run:
          name: Download golint
          command: go get -u golang.org/x/lint/golint
      - run:
          name: Download dependencies
          command: go mod tidy
      - save_cache:
          key: v1-go-mod-{{checksum "go.sum"}}
          paths:
            - "/home/circleci/go/pkg/mod"
      - persist_to_workspace:
          root: /home/circleci/go/
          paths:
            - src
            - pkg
            - bin
  unit:
    executor: bxgo
    steps:
      - attach_workspace:
          at: /home/circleci/go
      - run:
          name: Unit test
          command: make unit
  integration-testnet:
    executor: bxgo
    steps:
      - attach_workspace:
          at: /home/circleci/go
      - run:
          name: GRPC Examples (testnet)
          command: |
            unset PRIVATE_KEY
            API_ENV=testnet AUTH_HEADER=$AUTH_HEADER_TESTNET  make grpc-examples
      - run:
          name: HTTP Examples (testnet)
          command: |
            unset PRIVATE_KEY
            API_ENV=testnet AUTH_HEADER=$AUTH_HEADER_TESTNET  make http-examples
      - run:
          name: WS Examples (testnet)
          command: |
            unset PRIVATE_KEY
            API_ENV=testnet AUTH_HEADER=$AUTH_HEADER_TESTNET  make ws-examples
  integration-mainnet:
    executor: bxgo
    steps:
      - attach_workspace:
          at: /home/circleci/go
      - run:
          name: Export build details
          command: |
            source $BUILD_ENV
            echo $BRANCH
      - run:
          name: GRPC Examples (mainnet)
          command: |
            unset PRIVATE_KEY
            API_ENV=mainnet AUTH_HEADER=$AUTH_HEADER_MAINNET  make grpc-examples
      - run:
          name: HTTP Examples (mainnet)
          command: |
            unset PRIVATE_KEY
            API_ENV=mainnet AUTH_HEADER=$AUTH_HEADER_MAINNET  make http-examples
      - run:
          name: WS Examples (mainnet)
          command: |
            unset PRIVATE_KEY
            API_ENV=mainnet AUTH_HEADER=$AUTH_HEADER_MAINNET  make ws-examples
      - slack/notify:
          branch_pattern: develop
          custom: |
            {
              "text": "solana-trader-client-go Build failed [$BRANCH]",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "solana-trader-client-go Build failed",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "@here The latest merge seems to have broken builds.\n\nLast commit: <https://github.com/bloXroute-Labs/solana-trader-client-go/commit/$COMMIT_HASH|$COMMIT_HASH> \nAuthor: $COMMIT_AUTHOR"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "CircleCI",
                      "emoji": true
                    },
                    "url": "https://app.circleci.com/pipelines/github/bloXroute-Labs/solana-trader-client-go?branch=develop"
                  }
                }
              ]
            }
          event: fail
  checkout-tag:
    executor: bxgo
    steps:
      - attach_workspace:
          at: /home/circleci/go
      - checkout
      - run:
          name: Checkout latest tag
          command: |
            git checkout $(git describe --tags --abbrev=0)
      - run:
          name: Export build details
          command: |
            touch $BUILD_ENV
            echo 'export COMMIT_HASH=$(git rev-parse HEAD)' >> $BUILD_ENV
            echo 'export COMMIT_AUTHOR="$(git --no-pager log -1 --pretty=format:'%an')"' >> $BUILD_ENV
            echo 'export BRANCH="$(git rev-parse --abbrev-ref HEAD)"' >> $BUILD_ENV
      - persist_to_workspace:
          root: /home/circleci/go/
          paths:
            - src
            - pkg
            - bin
workflows:
  version: 2
  test-branch:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - checkout
      - init:
          context: circleci
          requires:
            - checkout
      - unit:
          context: slack
          requires:
            - init
      - integration-testnet:
          context:
            - trader-api-sdk
          requires:
            - init
            - unit
      - integration-mainnet:
          context:
            - slack
            - trader-api-sdk
          requires:
            - init
            - unit
  nightly:
    when:
      equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - checkout-tag
      - init:
          context: circleci
          requires:
            - checkout-tag
      - unit:
          requires:
            - init
      - integration-testnet:
          context:
            - trader-api-sdk
          requires:
            - init
            - unit
      - integration-mainnet:
          context:
            - slack
            - trader-api-sdk
          requires:
            - init
            - unit
